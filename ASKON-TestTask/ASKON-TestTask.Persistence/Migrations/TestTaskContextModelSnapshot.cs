// <auto-generated />
using System;
using ASKON_TestTask.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASKON_TestTask.Persistence.Migrations
{
    [DbContext(typeof(TestTaskContext))]
    partial class TestTaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASKON_TestTask.Persistence.Entities.Detail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("DetailId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            DetailId = 1,
                            Name = "Двигатель 2106"
                        },
                        new
                        {
                            DetailId = 2,
                            Name = "Двигатель 2103"
                        },
                        new
                        {
                            DetailId = 3,
                            Name = "Коленвал"
                        },
                        new
                        {
                            DetailId = 4,
                            Name = "Распредвал"
                        },
                        new
                        {
                            DetailId = 5,
                            Name = "Поршень в сборе"
                        },
                        new
                        {
                            DetailId = 6,
                            Name = "Поршень"
                        },
                        new
                        {
                            DetailId = 7,
                            Name = "Компрессионное кольцо"
                        },
                        new
                        {
                            DetailId = 8,
                            Name = "Маслосъемное кольцо"
                        },
                        new
                        {
                            DetailId = 9,
                            Name = "Шатун"
                        },
                        new
                        {
                            DetailId = 10,
                            Name = "Блок цилиндров"
                        });
                });

            modelBuilder.Entity("ASKON_TestTask.Persistence.Entities.DetailForReport", b =>
                {
                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("DetailName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DetailsForReport");
                });

            modelBuilder.Entity("ASKON_TestTask.Persistence.Entities.DetailRelation", b =>
                {
                    b.Property<int>("DetailRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int>("DetailId")
                        .HasColumnType("int");

                    b.Property<HierarchyId>("HierarchyLevel")
                        .IsRequired()
                        .HasColumnType("hierarchyId");

                    b.HasKey("DetailRelationId");

                    b.HasIndex("DetailId");

                    b.HasIndex("HierarchyLevel")
                        .IsUnique()
                        .HasName("RelationHierarchyUnique")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("DetailRelations");

                    b.HasData(
                        new
                        {
                            DetailRelationId = 1,
                            DetailId = 1,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/")
                        },
                        new
                        {
                            DetailRelationId = 2,
                            DetailId = 2,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/2/")
                        },
                        new
                        {
                            DetailRelationId = 3,
                            Count = 1,
                            DetailId = 10,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/10/")
                        },
                        new
                        {
                            DetailRelationId = 4,
                            Count = 1,
                            DetailId = 3,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/3/")
                        },
                        new
                        {
                            DetailRelationId = 5,
                            Count = 2,
                            DetailId = 4,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/4/")
                        },
                        new
                        {
                            DetailRelationId = 6,
                            Count = 4,
                            DetailId = 5,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/5/")
                        },
                        new
                        {
                            DetailRelationId = 7,
                            Count = 1,
                            DetailId = 6,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/5/6/")
                        },
                        new
                        {
                            DetailRelationId = 8,
                            Count = 2,
                            DetailId = 7,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/5/7/")
                        },
                        new
                        {
                            DetailRelationId = 9,
                            Count = 1,
                            DetailId = 8,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/5/8/")
                        },
                        new
                        {
                            DetailRelationId = 10,
                            Count = 4,
                            DetailId = 9,
                            HierarchyLevel = Microsoft.EntityFrameworkCore.HierarchyId.Parse("/1/9/")
                        });
                });

            modelBuilder.Entity("ASKON_TestTask.Persistence.Entities.DetailRelation", b =>
                {
                    b.HasOne("ASKON_TestTask.Persistence.Entities.Detail", "Detail")
                        .WithMany("DetailRelations")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
